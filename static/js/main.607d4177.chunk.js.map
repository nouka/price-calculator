{"version":3,"sources":["shared/PriceForm/index.tsx","shared/DiscountPer/index.tsx","shared/DiscountPrice/index.tsx","modules/index.ts","App.tsx","shared/TaxRate/index.tsx","shared/InTax/index.tsx","Settings.tsx","shared/Title/index.tsx","serviceWorker.ts","index.tsx"],"names":["PriceForm","props","label","inTax","price","Number","react_default","a","createElement","ListItem","ListItemText","ListItemSecondaryAction","Input","endAdornment","InputAdornment","position","fullWidth","inputProps","min","type","onChange","e","target","value","placeholder","useStyles","makeStyles","theme","createStyles","root","paddingTop","paddingBottom","slider","boxSizing","padding","width","marks","DiscountPer","classes","className","Slider","aria-labelledby","event","newValue","step","valueLabelDisplay","DiscountPrice","TextField","InputProps","readOnly","discountPrice","variant","initState","discountPer","tax","reducer","state","arguments","length","undefined","action","calcDiscountPrice","Object","assign","percent","toFixed","connect","dispatch","List","shared_PriceForm","shared_DiscountPer","shared_DiscountPrice","TaxRate","InTax","Switch","checked","shared_TaxRate","shared_InTax","Button","href","flexGrow","title","icon","color","Title","AppBar","Toolbar","Typography","noWrap","IconButton","edge","react_router_dom","to","esm_Settings","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","store","createStore","compose","persistState","ReactDOM","render","es","basename","process","shared_Title","react_router","path","exact","component","App","Settings","document","getElementById","URL","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.607d4177.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Input,\n  InputAdornment,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction\n} from \"@material-ui/core\";\n\ninterface Props {\n  inTax: boolean;\n  price: number;\n  onChange(price: number): void;\n}\n\nconst PriceForm = (props: Props) => {\n  const label = props.inTax ? \"商品価格(税込)\" : \"商品価格(税抜)\";\n  const price = props.price === 0 ? \"\" : Number(props.price);\n  const handleChange = (price: string) => {\n    props.onChange(Number(price));\n  };\n  return (\n    <ListItem>\n      <ListItemText>{label}</ListItemText>\n      <ListItemSecondaryAction>\n        <Input\n          endAdornment={<InputAdornment position=\"end\">円</InputAdornment>}\n          fullWidth\n          inputProps={{\n            min: 0,\n            type: \"number\"\n          }}\n          onChange={e => handleChange(e.target.value)}\n          placeholder={label}\n          value={price}\n        />\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nexport default PriceForm;\n","import React from \"react\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport {\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  Slider\n} from \"@material-ui/core\";\n\ninterface Props {\n  onChange(e: any): void;\n  value: number;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      paddingTop: \"2em\",\n      paddingBottom: \"2em\"\n    },\n    slider: {\n      boxSizing: \"border-box\",\n      padding: \"50px 1em 0\",\n      width: \"50vw\"\n    }\n  })\n);\n\nconst marks = [\n  {\n    value: 0,\n    label: \"0%\"\n  },\n  {\n    value: 100,\n    label: \"100%\"\n  }\n];\n\nconst DiscountPer = (props: Props) => {\n  const classes = useStyles();\n  const handleSliderChange = (event: any, newValue: number | number[]) => {\n    props.onChange(newValue);\n  };\n  return (\n    <ListItem className={classes.root}>\n      <ListItemText>ディスカウント率</ListItemText>\n      <ListItemSecondaryAction className={classes.slider}>\n        <Slider\n          aria-labelledby=\"discrete-slider-always\"\n          marks={marks}\n          onChange={handleSliderChange}\n          step={10}\n          value={typeof props.value === \"number\" ? props.value : 0}\n          valueLabelDisplay=\"on\"\n        />\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nexport default DiscountPer;\n","import React from \"react\";\nimport { TextField, InputAdornment, ListItem } from \"@material-ui/core\";\n\ninterface Props {\n  discountPrice: number;\n}\n\nconst DiscountPrice = (props: Props) => (\n  <ListItem>\n    <TextField\n      fullWidth\n      InputProps={{\n        endAdornment: <InputAdornment position=\"end\">円</InputAdornment>,\n        readOnly: true\n      }}\n      value={props.discountPrice}\n      variant=\"outlined\"\n    />\n  </ListItem>\n);\n\nexport default DiscountPrice;\n","export const CHANGE_DISCOUNT_PER = \"CHANGE_DISCOUNT_PER\";\nexport const CHANGE_PRICE = \"CHANGE_PRICE\";\nexport const CHANGE_TAX = \"CHANGE_TAX\";\nexport const SWITCH_IN_TAX = \"SWITCH_IN_TAX\";\n\ninterface State {\n  discountPer: number;\n  discountPrice: number;\n  inTax: boolean;\n  price: any;\n  tax: number;\n}\nexport type AppState = State;\n\nconst initState: State = {\n  discountPer: 20,\n  discountPrice: 0,\n  inTax: true,\n  price: \"\",\n  tax: 8\n};\n\nconst reducer = (state: any = initState, action: any) => {\n  const discountPrice = calcDiscountPrice(\n    state.price,\n    state.discountPer,\n    state.inTax,\n    state.tax\n  );\n  switch (action.type) {\n    case CHANGE_DISCOUNT_PER:\n      return Object.assign({}, state, {\n        discountPer: action.percent,\n        discountPrice: discountPrice\n      });\n    case CHANGE_PRICE:\n      return Object.assign({}, state, {\n        price: action.price,\n        discountPrice: discountPrice\n      });\n    case CHANGE_TAX:\n      return Object.assign({}, state, {\n        tax: action.tax,\n        discountPrice: discountPrice\n      });\n    case SWITCH_IN_TAX:\n      return Object.assign({}, state, {\n        inTax: !state.inTax,\n        discountPrice: discountPrice\n      });\n  }\n  return Object.assign({}, state, {\n    discountPrice: discountPrice\n  });\n};\nexport default reducer;\n\nconst calcDiscountPrice = (\n  price: number,\n  discountPer: number,\n  inTax: boolean,\n  tax: number\n) => {\n  const purePrice = inTax ? price - (price * tax) / (100 + tax) : price;\n  return (purePrice * (1 - discountPer / 100) * (tax / 100 + 1)).toFixed();\n};\n\nexport const changeDiscountPer = (percent: number) => ({\n  type: CHANGE_DISCOUNT_PER,\n  percent\n});\n\nexport const changePrice = (price: number) => ({\n  type: CHANGE_PRICE,\n  price\n});\n\nexport const changeTax = (tax: number) => ({\n  type: CHANGE_TAX,\n  tax\n});\n\nexport const switchInTax = () => ({\n  type: SWITCH_IN_TAX\n});\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { List } from \"@material-ui/core\";\nimport PriceForm from \"./shared/PriceForm/\";\nimport DiscountPer from \"./shared/DiscountPer/\";\nimport DiscountPrice from \"./shared/DiscountPrice/\";\nimport { AppState, changeDiscountPer, changePrice } from \"./modules/\";\n\ninterface Props extends AppState {\n  dispatch(action: any): any;\n}\n\nconst App = (props: Props) => {\n  const { dispatch } = props;\n  return (\n    <List>\n      <PriceForm\n        inTax={props.inTax}\n        onChange={value => dispatch(changePrice(value))}\n        price={props.price}\n      />\n      <DiscountPer\n        onChange={value => dispatch(changeDiscountPer(value))}\n        value={props.discountPer}\n      />\n      <DiscountPrice discountPrice={props.discountPrice} />\n    </List>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  discountPer: state.discountPer,\n  discountPrice: state.discountPrice,\n  inTax: state.inTax,\n  price: state.price,\n  tax: state.tax\n});\nexport default connect(mapStateToProps)(App);\n","import React from \"react\";\nimport {\n  Input,\n  InputAdornment,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction\n} from \"@material-ui/core\";\n\ninterface Props {\n  value: number;\n  onChange(e: any): void;\n}\nconst TaxRate = (props: Props) => {\n  const tax = props.value === 0 ? \"\" : Number(props.value);\n  const handleChange = (tax: string) => {\n    props.onChange(Number(tax));\n  };\n  return (\n    <ListItem>\n      <ListItemText>税率</ListItemText>\n      <ListItemSecondaryAction>\n        <Input\n          endAdornment={<InputAdornment position=\"end\">%</InputAdornment>}\n          inputProps={{\n            min: 0,\n            type: \"number\"\n          }}\n          onChange={e => handleChange(e.target.value)}\n          value={tax}\n        />\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nexport default TaxRate;\n","import React from \"react\";\nimport {\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  Switch\n} from \"@material-ui/core\";\n\ninterface Props {\n  inTax: boolean;\n  onChange(): void;\n}\nconst InTax = (props: Props) => {\n  const label = props.inTax ? \"税込\" : \"税抜\";\n  return (\n    <ListItem>\n      <ListItemText>{label}</ListItemText>\n      <ListItemSecondaryAction>\n        <Switch checked={props.inTax} onChange={() => props.onChange()} />\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nexport default InTax;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { List, ListItem, Button } from \"@material-ui/core\";\nimport TaxRate from \"./shared/TaxRate/\";\nimport InTax from \"./shared/InTax/\";\nimport { AppState, changeTax, switchInTax } from \"./modules/\";\n\ninterface Props extends AppState {\n  dispatch(action: any): any;\n}\n\nconst Settings = (props: Props) => {\n  const { dispatch } = props;\n  return (\n    <List>\n      <TaxRate\n        onChange={value => dispatch(changeTax(value))}\n        value={props.tax}\n      />\n      <InTax onChange={() => dispatch(switchInTax())} inTax={props.inTax} />\n      <ListItem>\n        <Button href=\"/\" fullWidth variant=\"contained\">\n          戻る\n        </Button>\n      </ListItem>\n    </List>\n  );\n};\nconst mapStateToProps = (state: AppState) => ({\n  tax: state.tax,\n  inTax: state.inTax\n});\nexport default connect(mapStateToProps)(Settings);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { AppBar, Toolbar, Typography, IconButton } from \"@material-ui/core\";\nimport { Settings } from \"@material-ui/icons\";\n\ninterface Props {\n  label: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1\n    },\n    title: {\n      flexGrow: 1\n    },\n    icon: {\n      color: \"white\"\n    }\n  })\n);\n\nconst Title = (props: Props) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" noWrap className={classes.title}>\n            {props.label}\n          </Typography>\n          <IconButton edge=\"end\">\n            <Link to=\"/settings\" className={classes.icon}>\n              <Settings />\n            </Link>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Title;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { compose, createStore } from \"redux\";\nimport persistState from \"redux-localstorage\";\nimport App from \"./App\";\nimport reducer from \"./modules/\";\nimport Settings from \"./Settings\";\nimport Title from \"./shared/Title/\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\n\nconst store = createStore(reducer, compose(persistState()));\n\nconst Root = () => (\n  <Provider store={store}>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Title label=\"Price Calculator\" />\n      <Route path=\"/\" exact component={App} />\n      <Route path=\"/settings\" component={Settings} />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById(\"root\"));\nserviceWorker.register();\n"],"sourceRoot":""}