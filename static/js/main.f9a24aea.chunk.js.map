{"version":3,"sources":["shared/PriceForm/index.tsx","shared/DiscountPer/index.tsx","shared/DiscountPrice/index.tsx","modules/index.ts","App.tsx","shared/TaxRate/index.tsx","shared/InTax/index.tsx","Settings.tsx","shared/Title/index.tsx","serviceWorker.ts","index.tsx"],"names":["PriceForm","props","label","inTax","price","Number","ListItem","ListItemText","ListItemSecondaryAction","Input","endAdornment","InputAdornment","position","fullWidth","inputProps","min","type","onChange","e","handleChange","target","value","placeholder","useStyles","makeStyles","theme","createStyles","root","paddingTop","paddingBottom","slider","boxSizing","padding","width","marks","DiscountPer","classes","className","Slider","aria-labelledby","event","newValue","step","valueLabelDisplay","DiscountPrice","TextField","InputProps","readOnly","discountPrice","variant","initState","discountPer","tax","reducer","state","action","calcDiscountPrice","Object","assign","percent","toFixed","connect","dispatch","List","TaxRate","InTax","Switch","checked","Button","href","flexGrow","title","icon","color","Title","AppBar","Toolbar","Typography","noWrap","IconButton","edge","to","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","store","createStore","compose","persistState","ReactDOM","render","basename","process","path","exact","component","App","Settings","document","getElementById","URL","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f9a24aea.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Input,\n  InputAdornment,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction\n} from \"@material-ui/core\";\n\ninterface Props {\n  inTax: boolean;\n  price: number;\n  onChange(price: number): void;\n}\n\nconst PriceForm = (props: Props) => {\n  const label = props.inTax ? \"商品価格(税込)\" : \"商品価格(税抜)\";\n  const price = props.price === 0 ? \"\" : Number(props.price);\n  const handleChange = (price: string) => {\n    props.onChange(Number(price));\n  };\n  return (\n    <ListItem>\n      <ListItemText>{label}</ListItemText>\n      <ListItemSecondaryAction>\n        <Input\n          endAdornment={<InputAdornment position=\"end\">円</InputAdornment>}\n          fullWidth\n          inputProps={{\n            min: 0,\n            type: \"number\"\n          }}\n          onChange={e => handleChange(e.target.value)}\n          placeholder={label}\n          value={price}\n        />\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nexport default PriceForm;\n","import React from \"react\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport {\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  Slider\n} from \"@material-ui/core\";\n\ninterface Props {\n  onChange(e: any): void;\n  value: number;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      paddingTop: \"2em\",\n      paddingBottom: \"2em\"\n    },\n    slider: {\n      boxSizing: \"border-box\",\n      padding: \"50px 1em 0\",\n      width: \"50vw\"\n    }\n  })\n);\n\nconst marks = [\n  {\n    value: 0,\n    label: \"0%\"\n  },\n  {\n    value: 100,\n    label: \"100%\"\n  }\n];\n\nconst DiscountPer = (props: Props) => {\n  const classes = useStyles();\n  const handleSliderChange = (event: any, newValue: number | number[]) => {\n    props.onChange(newValue);\n  };\n  return (\n    <ListItem className={classes.root}>\n      <ListItemText>ディスカウント率</ListItemText>\n      <ListItemSecondaryAction className={classes.slider}>\n        <Slider\n          aria-labelledby=\"discrete-slider-always\"\n          marks={marks}\n          onChange={handleSliderChange}\n          step={10}\n          value={typeof props.value === \"number\" ? props.value : 0}\n          valueLabelDisplay=\"on\"\n        />\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nexport default DiscountPer;\n","import React from \"react\";\nimport { TextField, InputAdornment, ListItem } from \"@material-ui/core\";\n\ninterface Props {\n  discountPrice: number;\n}\n\nconst DiscountPrice = (props: Props) => (\n  <ListItem>\n    <TextField\n      fullWidth\n      InputProps={{\n        endAdornment: <InputAdornment position=\"end\">円</InputAdornment>,\n        readOnly: true\n      }}\n      value={props.discountPrice}\n      variant=\"outlined\"\n    />\n  </ListItem>\n);\n\nexport default DiscountPrice;\n","export const CHANGE_DISCOUNT_PER = \"CHANGE_DISCOUNT_PER\";\nexport const CHANGE_PRICE = \"CHANGE_PRICE\";\nexport const CHANGE_TAX = \"CHANGE_TAX\";\nexport const SWITCH_IN_TAX = \"SWITCH_IN_TAX\";\n\ninterface State {\n  discountPer: number;\n  discountPrice: number;\n  inTax: boolean;\n  price: any;\n  tax: number;\n}\nexport type AppState = State;\n\nconst initState: State = {\n  discountPer: 20,\n  discountPrice: 0,\n  inTax: true,\n  price: \"\",\n  tax: 8\n};\n\nconst reducer = (state: any = initState, action: any) => {\n  const discountPrice = calcDiscountPrice(\n    state.price,\n    state.discountPer,\n    state.inTax,\n    state.tax\n  );\n  switch (action.type) {\n    case CHANGE_DISCOUNT_PER:\n      return Object.assign({}, state, {\n        discountPer: action.percent,\n        discountPrice: discountPrice\n      });\n    case CHANGE_PRICE:\n      return Object.assign({}, state, {\n        price: action.price,\n        discountPrice: discountPrice\n      });\n    case CHANGE_TAX:\n      return Object.assign({}, state, {\n        tax: action.tax,\n        discountPrice: discountPrice\n      });\n    case SWITCH_IN_TAX:\n      return Object.assign({}, state, {\n        inTax: !state.inTax,\n        discountPrice: discountPrice\n      });\n  }\n  return Object.assign({}, state, {\n    discountPrice: discountPrice\n  });\n};\nexport default reducer;\n\nconst calcDiscountPrice = (\n  price: number,\n  discountPer: number,\n  inTax: boolean,\n  tax: number\n) => {\n  const purePrice = inTax ? price - (price * tax) / (100 + tax) : price;\n  return (purePrice * (1 - discountPer / 100) * (tax / 100 + 1)).toFixed();\n};\n\nexport const changeDiscountPer = (percent: number) => ({\n  type: CHANGE_DISCOUNT_PER,\n  percent\n});\n\nexport const changePrice = (price: number) => ({\n  type: CHANGE_PRICE,\n  price\n});\n\nexport const changeTax = (tax: number) => ({\n  type: CHANGE_TAX,\n  tax\n});\n\nexport const switchInTax = () => ({\n  type: SWITCH_IN_TAX\n});\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { List } from \"@material-ui/core\";\nimport PriceForm from \"./shared/PriceForm/\";\nimport DiscountPer from \"./shared/DiscountPer/\";\nimport DiscountPrice from \"./shared/DiscountPrice/\";\nimport { AppState, changeDiscountPer, changePrice } from \"./modules/\";\n\ninterface Props extends AppState {\n  dispatch(action: any): any;\n}\n\nconst App = (props: Props) => {\n  const { dispatch } = props;\n  return (\n    <List>\n      <PriceForm\n        inTax={props.inTax}\n        onChange={value => dispatch(changePrice(value))}\n        price={props.price}\n      />\n      <DiscountPer\n        onChange={value => dispatch(changeDiscountPer(value))}\n        value={props.discountPer}\n      />\n      <DiscountPrice discountPrice={props.discountPrice} />\n    </List>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  discountPer: state.discountPer,\n  discountPrice: state.discountPrice,\n  inTax: state.inTax,\n  price: state.price,\n  tax: state.tax\n});\nexport default connect(mapStateToProps)(App);\n","import React from \"react\";\nimport {\n  Input,\n  InputAdornment,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction\n} from \"@material-ui/core\";\n\ninterface Props {\n  value: number;\n  onChange(e: any): void;\n}\nconst TaxRate = (props: Props) => {\n  const tax = props.value === 0 ? \"\" : Number(props.value);\n  const handleChange = (tax: string) => {\n    props.onChange(Number(tax));\n  };\n  return (\n    <ListItem>\n      <ListItemText>税率</ListItemText>\n      <ListItemSecondaryAction>\n        <Input\n          endAdornment={<InputAdornment position=\"end\">%</InputAdornment>}\n          inputProps={{\n            min: 0,\n            type: \"number\"\n          }}\n          onChange={e => handleChange(e.target.value)}\n          value={tax}\n        />\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nexport default TaxRate;\n","import React from \"react\";\nimport {\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  Switch\n} from \"@material-ui/core\";\n\ninterface Props {\n  inTax: boolean;\n  onChange(): void;\n}\nconst InTax = (props: Props) => {\n  const label = props.inTax ? \"税込\" : \"税抜\";\n  return (\n    <ListItem>\n      <ListItemText>{label}</ListItemText>\n      <ListItemSecondaryAction>\n        <Switch checked={props.inTax} onChange={() => props.onChange()} />\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nexport default InTax;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { List, ListItem, Button } from \"@material-ui/core\";\nimport TaxRate from \"./shared/TaxRate/\";\nimport InTax from \"./shared/InTax/\";\nimport { AppState, changeTax, switchInTax } from \"./modules/\";\n\ninterface Props extends AppState {\n  dispatch(action: any): any;\n}\n\nconst Settings = (props: Props) => {\n  const { dispatch } = props;\n  return (\n    <List>\n      <TaxRate\n        onChange={value => dispatch(changeTax(value))}\n        value={props.tax}\n      />\n      <InTax onChange={() => dispatch(switchInTax())} inTax={props.inTax} />\n      <ListItem>\n        <Button href=\"/\" fullWidth variant=\"contained\">\n          戻る\n        </Button>\n      </ListItem>\n    </List>\n  );\n};\nconst mapStateToProps = (state: AppState) => ({\n  tax: state.tax,\n  inTax: state.inTax\n});\nexport default connect(mapStateToProps)(Settings);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { AppBar, Toolbar, Typography, IconButton } from \"@material-ui/core\";\nimport { Settings } from \"@material-ui/icons\";\n\ninterface Props {\n  label: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1\n    },\n    title: {\n      flexGrow: 1\n    },\n    icon: {\n      color: \"white\"\n    }\n  })\n);\n\nconst Title = (props: Props) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" noWrap className={classes.title}>\n            {props.label}\n          </Typography>\n          <IconButton edge=\"end\">\n            <Link to=\"/settings\" className={classes.icon}>\n              <Settings />\n            </Link>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Title;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { compose, createStore } from \"redux\";\nimport persistState from \"redux-localstorage\";\nimport App from \"./App\";\nimport reducer from \"./modules/\";\nimport Settings from \"./Settings\";\nimport Title from \"./shared/Title/\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\n\nconst store = createStore(reducer, compose(persistState()));\n\nconst Root = () => (\n  <Provider store={store}>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Title label=\"Price Calculator\" />\n      <Route path=\"/\" exact component={App} />\n      <Route path=\"/settings\" component={Settings} />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById(\"root\"));\nserviceWorker.register();\n"],"sourceRoot":""}