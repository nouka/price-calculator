{"version":3,"sources":["shared/PriceForm/index.tsx","shared/DiscountPer/index.tsx","shared/DiscountPrice/index.tsx","modules/priceCalculator.ts","App.tsx","shared/TaxRate/index.tsx","shared/InTax/index.tsx","Settings.tsx","shared/Title/index.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","PriceForm","props","label","inTax","react_default","a","createElement","ListItem","ListItemText","ListItemSecondaryAction","Input","endAdornment","InputAdornment","position","fullWidth","inputProps","min","type","onChange","e","price","target","value","Number","placeholder","paddingTop","paddingBottom","slider","boxSizing","padding","width","marks","DiscountPer","classes","className","Slider","aria-labelledby","event","newValue","step","valueLabelDisplay","DiscountPrice","purePrice","tax","discountPrice","discount","TextField","InputProps","readOnly","Math","floor","variant","initState","discountPer","reducer","state","arguments","length","undefined","action","Object","assign","percent","connect","dispatch","List","shared_PriceForm","shared_DiscountPer","shared_DiscountPrice","TaxRate","InTax","Switch","checked","shared_TaxRate","shared_InTax","Button","react_router_dom","to","flexGrow","title","icon","color","Title","AppBar","Toolbar","Typography","noWrap","IconButton","edge","esm_Settings","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","store","createStore","priceCalculator","compose","persistState","ReactDOM","render","es","basename","process","shared_Title","react_router","path","exact","component","App","Settings","document","getElementById","URL","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5c64cc8f.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport {\n  Input,\n  InputAdornment,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction\n} from \"@material-ui/core\";\n\ninterface Props {\n  inTax: boolean;\n  price: number;\n  onChange(price: number): void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {}\n  })\n);\n\nconst PriceForm = (props: Props) => {\n  const label = props.inTax ? \"商品価格(税込)\" : \"商品価格(税抜)\";\n  const classes = useStyles();\n  const handleChange = (price: string) => {\n    props.onChange(Number(price));\n  };\n  return (\n    <ListItem>\n      <ListItemText>{label}</ListItemText>\n      <ListItemSecondaryAction>\n        <Input\n          endAdornment={<InputAdornment position=\"end\">円</InputAdornment>}\n          fullWidth\n          inputProps={{\n            min: 0,\n            type: \"number\"\n          }}\n          onChange={e => handleChange(e.target.value)}\n          placeholder={label}\n          value={props.price}\n        />\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nexport default PriceForm;\n","import React from \"react\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport {\n  Slider,\n  Typography,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction\n} from \"@material-ui/core\";\n\ninterface Props {\n  onChange(e: any): void;\n  value: number;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      paddingTop: \"2em\",\n      paddingBottom: \"2em\"\n    },\n    slider: {\n      boxSizing: \"border-box\",\n      padding: \"50px 1em 0\",\n      width: \"50vw\"\n    }\n  })\n);\n\nconst marks = [\n  {\n    value: 0,\n    label: \"0%\"\n  },\n  {\n    value: 100,\n    label: \"100%\"\n  }\n];\n\nconst DiscountPer = (props: Props) => {\n  const classes = useStyles();\n  const handleSliderChange = (event: any, newValue: number | number[]) => {\n    props.onChange(newValue);\n  };\n  return (\n    <ListItem className={classes.root}>\n      <ListItemText>ディスカウント率</ListItemText>\n      <ListItemSecondaryAction className={classes.slider}>\n        <Slider\n          aria-labelledby=\"discrete-slider-always\"\n          marks={marks}\n          onChange={handleSliderChange}\n          step={10}\n          value={typeof props.value === \"number\" ? props.value : 0}\n          valueLabelDisplay=\"on\"\n        />\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nexport default DiscountPer;\n","import React from \"react\";\nimport { TextField, InputAdornment, ListItem } from \"@material-ui/core\";\n\ninterface Props {\n  inTax: boolean;\n  discount: number;\n  price: number;\n  tax: number;\n}\n\nconst DiscountPrice = (props: Props) => {\n  let purePrice = props.inTax\n    ? props.price - (props.price * props.tax) / (100 + props.tax)\n    : props.price;\n  let tax = props.tax / 100 + 1;\n  let discountPrice = purePrice * (1 - props.discount / 100);\n  return (\n    <ListItem>\n      <TextField\n        fullWidth\n        InputProps={{\n          endAdornment: <InputAdornment position=\"end\">円</InputAdornment>,\n          readOnly: true\n        }}\n        value={Math.floor(discountPrice * tax)}\n        variant=\"outlined\"\n      />\n    </ListItem>\n  );\n};\n\nexport default DiscountPrice;\n","export const CHANGE_DISCOUNT_PER = \"CHANGE_DISCOUNT_PER\";\nexport const SWITCH_IN_TAX = \"SWITCH_IN_TAX\";\nexport const CHANGE_PRICE = \"CHANGE_PRICE\";\nexport const CHANGE_TAX = \"CHANGE_TAX\";\n\ninterface State {\n  discountPer: number;\n  inTax: boolean;\n  price: any;\n  tax: number;\n}\nexport type PriceCalculatorState = State;\n\nconst initState: State = {\n  discountPer: 20,\n  inTax: true,\n  price: \"\",\n  tax: 8\n};\n\nconst reducer = (state: any = initState, action: any) => {\n  switch (action.type) {\n    case CHANGE_DISCOUNT_PER:\n      return Object.assign({}, state, {\n        discountPer: action.percent\n      });\n    case SWITCH_IN_TAX:\n      return Object.assign({}, state, {\n        inTax: !state.inTax\n      });\n    case CHANGE_PRICE:\n      return Object.assign({}, state, {\n        price: action.price\n      });\n    case CHANGE_TAX:\n      return Object.assign({}, state, {\n        tax: action.tax\n      });\n  }\n  return state;\n};\nexport default reducer;\n\nexport const changeDiscountPer = (percent: number) => ({\n  type: CHANGE_DISCOUNT_PER,\n  percent\n});\n\nexport const switchInTax = () => ({\n  type: SWITCH_IN_TAX\n});\n\nexport const changePrice = (price: number) => ({\n  type: CHANGE_PRICE,\n  price\n});\n\nexport const changeTax = (tax: number) => ({\n  type: CHANGE_TAX,\n  tax\n});\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { List } from \"@material-ui/core\";\nimport PriceForm from \"./shared/PriceForm/\";\nimport DiscountPer from \"./shared/DiscountPer/\";\nimport DiscountPrice from \"./shared/DiscountPrice/\";\nimport {\n  PriceCalculatorState,\n  changeDiscountPer,\n  changePrice\n} from \"./modules/priceCalculator\";\n\ninterface Props extends PriceCalculatorState {\n  dispatch(action: any): any;\n}\n\nconst App = (props: Props) => {\n  const { dispatch } = props;\n  return (\n    <List>\n      <PriceForm\n        inTax={props.inTax}\n        onChange={value => dispatch(changePrice(value))}\n        price={props.price}\n      />\n      <DiscountPer\n        onChange={value => dispatch(changeDiscountPer(value))}\n        value={props.discountPer}\n      />\n      <DiscountPrice\n        discount={props.discountPer}\n        inTax={props.inTax}\n        price={props.price}\n        tax={props.tax}\n      />\n    </List>\n  );\n};\n\nconst mapStateToProps = (state: PriceCalculatorState) => ({\n  discountPer: state.discountPer,\n  inTax: state.inTax,\n  price: state.price,\n  tax: state.tax\n});\nexport default connect(mapStateToProps)(App);\n","import React from \"react\";\nimport {\n  Input,\n  InputAdornment,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction\n} from \"@material-ui/core\";\n\ninterface Props {\n  value: number;\n  onChange(e: any): void;\n}\nconst TaxRate = (props: Props) => {\n  const handleChange = (tax: string) => {\n    props.onChange(Number(tax));\n  };\n  return (\n    <ListItem>\n      <ListItemText>税率</ListItemText>\n      <ListItemSecondaryAction>\n        <Input\n          endAdornment={<InputAdornment position=\"end\">%</InputAdornment>}\n          inputProps={{\n            min: 0,\n            type: \"number\"\n          }}\n          onChange={e => handleChange(e.target.value)}\n          value={props.value}\n        />\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nexport default TaxRate;\n","import React from \"react\";\nimport {\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  Switch\n} from \"@material-ui/core\";\n\ninterface Props {\n  inTax: boolean;\n  onChange(): void;\n}\nconst InTax = (props: Props) => {\n  let label = props.inTax ? \"税込\" : \"税抜\";\n  return (\n    <ListItem>\n      <ListItemText>{label}</ListItemText>\n      <ListItemSecondaryAction>\n        <Switch checked={props.inTax} onChange={() => props.onChange()} />\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nexport default InTax;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { List, ListItem, Button } from \"@material-ui/core\";\nimport TaxRate from \"./shared/TaxRate/\";\nimport InTax from \"./shared/InTax/\";\nimport {\n  PriceCalculatorState,\n  changeTax,\n  switchInTax\n} from \"./modules/priceCalculator\";\n\ninterface Props extends PriceCalculatorState {\n  dispatch(action: any): any;\n}\n\nconst Settings = (props: Props) => {\n  const { dispatch } = props;\n  return (\n    <List>\n      <TaxRate\n        onChange={value => dispatch(changeTax(value))}\n        value={props.tax}\n      />\n      <InTax onChange={() => dispatch(switchInTax())} inTax={props.inTax} />\n      <ListItem>\n        <Button variant=\"contained\">\n          <Link to=\"/\">戻る</Link>\n        </Button>\n      </ListItem>\n    </List>\n  );\n};\nconst mapStateToProps = (state: PriceCalculatorState) => ({\n  tax: state.tax,\n  inTax: state.inTax\n});\nexport default connect(mapStateToProps)(Settings);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { AppBar, Toolbar, Typography, IconButton } from \"@material-ui/core\";\nimport { Settings } from \"@material-ui/icons\";\n\ninterface Props {\n  label: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1\n    },\n    title: {\n      flexGrow: 1\n    },\n    icon: {\n      color: \"white\"\n    }\n  })\n);\n\nconst Title = (props: Props) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" noWrap className={classes.title}>\n            {props.label}\n          </Typography>\n          <IconButton edge=\"end\">\n            <Link to=\"/settings\" className={classes.icon}>\n              <Settings />\n            </Link>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Title;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { compose, createStore } from \"redux\";\nimport persistState from \"redux-localstorage\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport Settings from \"./Settings\";\nimport Title from \"./shared/Title/\";\nimport priceCalculator from \"./modules/priceCalculator\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst store = createStore(priceCalculator, compose(persistState()));\n\nconst Root = () => (\n  <Provider store={store}>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Title label=\"割引価格計算\" />\n      <Route path=\"/\" exact component={App} />\n      <Route path=\"/settings\" component={Settings} />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById(\"root\"));\nserviceWorker.register();\n"],"sourceRoot":""}